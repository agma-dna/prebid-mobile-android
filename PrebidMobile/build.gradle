apply from: 'android.gradle'
apply from: 'publisher.gradle'

dependencies {
    api project(':PrebidMobile-core')
}

task combinedJavadoc(type: Javadoc, dependsOn: assemble) {
    title = """
        <h1>Prebid Mobile SDK - Android API Reference</h1>
        <p>Prebid Android SDK is an open-source monetization library that allows you to integrate header bidding demand partners into the mobile app in various ways. The integration documentation can be found <a href="https://docs.prebid.org/prebid-mobile/prebid-mobile.html">here</a>. </p>
        <p>This section is autogenerated documentation describing the SDK&#39;s public classes, methods, and other code structures. It doesn&#39;t provide any integration guides but always provides updated API references. </p>
        <p>The documentation is generated for each SDK release.  </p>
        <p>If you see any inconsistency or want to improve the process, you are always welcome to contribute to <a href="https://github.com/prebid/prebid-mobile-android">Prebid Mobile Android SDK</a> on GitHub. </p>
    """

    var sourcePaths = project(":PrebidMobile-core").files("src/main/java")
            .plus(project(":PrebidMobile-admobAdapters").files("src/main/java"))
            .plus(project(":PrebidMobile-gamEventHandlers").files("src/main/java"))
            .plus(project(":PrebidMobile-maxAdapters").files("src/main/java"))
    source = sourcePaths
    destinationDir = file("$projectDir/build/combinedJavadoc")
    options.addBooleanOption('-ignore-source-errors', true)
    failOnError false

    exclude("**/com/applovin/mediation/adapters/prebid/**")
    exclude("**/org/prebid/mobile/addendum**")
    exclude("**/org/prebid/mobile/configuration**")
    exclude("**/org/prebid/mobile/http**")
    exclude("**/org/prebid/mobile/tasksmanager**")
    exclude("**/org/prebid/mobile/rendering**")
    exclude("**/org/prebid/mobile/eventhandlers/utils**")
    exclude("**/org/prebid/mobile/eventhandlers/global**")

    // Boot class path fix
    afterEvaluate {
        tasks.combinedJavadoc.classpath += files(android.getBootClasspath())
    }
}